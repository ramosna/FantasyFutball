{
	"info": {
		"_postman_id": "b3cc28c0-a7b4-4ce0-963a-7befddeb0632",
		"name": "ramosna_project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20354974"
	},
	"item": [
		{
			"name": "Create team using invalid content-type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-type not JSON 415 status code\", function () {\r",
							"    //Check for 415 status code\r",
							"    pm.response.to.have.status(415);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/html",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create team invalid_jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create team invalid_jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Legends FC\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create team missing jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create team missing jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Legends FC\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create team",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create team 201 status code\", function () {\r",
							"    //Check for 201 status code\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"team1_id\", pm.response.json()[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Legends FC\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get team invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get invalid team 404 status code\", function () {\r",
							"    //Check for 404 status code\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{invaild_team_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{invaild_team_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get team1 with jwt2 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get team with wrong jwt 403 status code\", function () {\r",
							"    //Check for 403 status code\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit team1 with jwt2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edit team with wrong jwt 403 status code\", function () {\r",
							"    //Check for 403 status code\r",
							"    pm.response.to.have.status(403);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Legends FC\",\r\n    \"wins\": 7,\r\n    \"draws\": 5,\r\n    \"losses\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete team1 with jwt2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete team with wrong jwt 403 status code\", function () {\r",
							"    //Check for 403 status code\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get team1 with invalid_jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get team with invalid jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get team1 with missing jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get team with missing jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put team1 with invalid_jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put team with invalid jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Legends FC\",\r\n    \"wins\": 7,\r\n    \"draws\": 5,\r\n    \"losses\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put team1 with missing jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put team with missing jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Legends FC\",\r\n    \"wins\": 7,\r\n    \"draws\": 5,\r\n    \"losses\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch team1 with invalid_jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Patch team with invalid jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Legends FC\",\r\n    \"wins\": 7,\r\n    \"draws\": 5,\r\n    \"losses\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch team1 with missing jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Patch team with missing jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Legends FC\",\r\n    \"wins\": 7,\r\n    \"draws\": 5,\r\n    \"losses\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete team1 with invalid_jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete team with invalid jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete team1 with missing jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete team with missing jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get team1 before edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get team 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit team1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edit team 204 status code\", function () {\r",
							"    //Check for 204 status code\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Legends FC\",\r\n    \"wins\": 7,\r\n    \"draws\": 5,\r\n    \"losses\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get team1 after edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get team 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create invalid player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Invalid reate player 400 status code\", function () {\r",
							"    //Check for 400 status code\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"Lionel\",\r\n    \"last_name\": \"Messi\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/players",
					"host": [
						"{{url}}"
					],
					"path": [
						"players"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create player 201 status code\", function () {\r",
							"    //Check for 201 status code\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"player1_id\", pm.response.json()[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"Lionel\",\r\n    \"last_name\": \"Messi\",\r\n    \"position\": \"Center Forward\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/players",
					"host": [
						"{{url}}"
					],
					"path": [
						"players"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get player1 invalid accept header",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get player1 invalid accept header 406 status code\", function () {\r",
							"    //Check for 406 status code\r",
							"    pm.response.to.have.status(406);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/html",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get player1 before edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get player 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Player Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edit player 204 status code\", function () {\r",
							"    //Check for 204 status code\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"Diego\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get player1 after edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get player 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get team1 before adding player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get team 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get player1 before put on team",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get player 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add player1 to team1 jwt2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add player to team jwt2 403 status code\", function () {\r",
							"    //Check for 403 status code\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}",
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add player1 to team1 invalid jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add player to team invalid_jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}",
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add player1 to team1 missing jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add player to team missing jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}",
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add player1 to team1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add player to team 204 status code\", function () {\r",
							"    //Check for 204 status code\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}",
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get team1 after adding player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get team 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get player1 after put on team",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get player 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove player1 from team1 jwt2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Remove player from team jwt2 403 status code\", function () {\r",
							"    //Check for 403 status code\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}",
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove player1 from team1 invalid jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Remove player from team invalid jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}",
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove player1 from team1 missing jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Remove player from team missing jwt 401 status code\", function () {\r",
							"    //Check for 401 status code\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}",
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove player1 from team1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Remove player from team 204 status code\", function () {\r",
							"    //Check for 204 status code\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}",
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get team1 after removing player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get team 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get player1 after removed from team",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get player 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all teams",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all teams 200 status code\", function () {\r",
							"    //Check for 200 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/teams",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all players",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all players 200 status code\", function () {\r",
							"    //Check for 201 status code\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/players",
					"host": [
						"{{url}}"
					],
					"path": [
						"players"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete player1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete player 204 status code\", function () {\r",
							"    //Check for 204 status code\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/players/{{player1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"players",
						"{{player1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete team1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete team 204 status code\", function () {\r",
							"    //Check for 304 status code\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/teams/{{team1_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams",
						"{{team1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Checking not acceptable request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Not Acceptable request 405 status code\", function () {\r",
							"    //Check for 405 status code\r",
							"    pm.response.to.have.status(405);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{url}}/teams",
					"host": [
						"{{url}}"
					],
					"path": [
						"teams"
					]
				}
			},
			"response": []
		}
	]
}